<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ortho_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x+=16
y+=16
image_speed = 0;
isox=get_iso_x(x,y)
isoy=get_iso_y(x,y)
lenX = 0; lenY = 0; // for character direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_wheel_up() == true)
{
    view_wview[0] -=40
    view_wview[0] = max(view_wview[0],200)//actually min
    view_hview[0] = view_wview[0]/1.7142
}
if(mouse_wheel_down() == true)
{
    view_wview[0] +=40
    view_wview[0] = min(view_wview[0],1200)//actually max
    view_hview[0] = view_wview[0]/1.7142
}

view_xview[0] = isox-((view_wview[0]-global.phoneWidth)/2)   
view_yview[0] = isoy-((view_hview[0])/2)   

with(o_tile){solid=true}

//isoMouseX=get_iso_x(mouse_x,mouse_y)
//isoMouseY=get_iso_y(mouse_x,mouse_y)

image_angle = point_direction(isox,isoy,mouse_x,mouse_y)
image_index = round(image_angle/45)+90;

if(mouse_check_button(mb_left) == 1)
{
    spd = 4;
    lenX = lengthdir_x(spd,image_angle+45)
    lenY = lengthdir_y(spd,image_angle+45)
    if ( place_free(x+lenX,y+lenY) )
    {
        x+=lenX;
        y+=lenY;
    }
}

with(all){solid=false}
depth=-(x+y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.isoview=false
{
    draw_self()
}

if global.isoview=true
{
    isox=get_iso_x(x,y)
    isoy=get_iso_y(x,y)
    draw_sprite(s_iso_player,image_index,isox,isoy)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
