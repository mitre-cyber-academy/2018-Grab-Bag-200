<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.isoview=true

global.width_ortho=32
global.height_ortho=32
global.width_iso=78
global.height_iso=40

global.phoneWidth = sprite_get_width(spritePhone)
bottomX = window_get_width()
bottomY = window_get_height()
global.phoneToScreenRatio = (bottomX-global.phoneWidth)/bottomX
phoneX = bottomX-global.phoneWidth // recheck screen size
phoneY = 0
phoneScreenX = phoneX+33;
phoneScreenY = phoneY+96;
phoneScreenHeight = 470;
phoneScreenWidth = 262
phoneApp = 0;
batteryPercent = 100;
savedTime = current_time;
global.wasted = false;

homeSpriteWidth = sprite_get_width(spriteHome)
homeSpriteHeight = sprite_get_height(spriteHome)
returnCommand = "";
listOfCommands = ds_list_create()
keyboard_string = "$ ";

lastCarDeployed  = current_time;

global.BTScancheck = 0;
numOfDevicesAtTime = 1
global.server = "http://127.0.0.1:8080/"
lastCommand = "";
connectedTo = -1;
timeOut = current_time;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.IamtheChosen1 == 0)
{
    global.IamtheChosen1 = ceil(random(instance_number(gasPump)))
    with(gasPump)
    {
        global.myNumberAdd+=1;
        myNumber = global.myNumberAdd
        if(myNumber == global.IamtheChosen1)
        {
            haveBlueThoothDevice = true; 
            myBTD = instance_create(x,y,bluethoothDevice)
            myBTD.name = "HC-01"
            myBTD.idd = generateMAC(myBTD.name);
            myBTD.range = 1;
        }
    }
}

if(global.BTScancheck == numOfDevicesAtTime )
{
    println("-----Scan Complete-----")
    global.BTScancheck = 0;
}

alarm[0] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-y

//divide by multiples by 100 seconds; so should be 3600 seconds or 2 minutes
batteryPercent = ((current_time-savedTime)/1000)/36

if(current_time-lastCarDeployed &gt; 20)
{
    if(instance_number(carObject) != 0)
    {
        nearest = instance_nearest(-464,1040,carObject)
        if(instance_exists(nearest))
        {
            howFar = point_distance(-464,1040,nearest.x,nearest.y)
            if(howFar &gt; 300)
            {
                instance_create(0,0,carObject)
                lastCarDeployed  = current_time;
            }
        }
    }
    else
    {
        instance_create(0,0,carObject)
        lastCarDeployed  = current_time;
    }
}


if(keyboard_check_pressed(vk_f4))
{
    window_set_fullscreen(!window_get_fullscreen())
}
if(keyboard_check_pressed(vk_escape))
{
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == get
   {
    if ds_map_find_value(async_load, "status") == 0
      {
      r_str = ds_map_find_value(async_load, "result");
      }
   else
      {
      r_str = "Unknown Error";
      }
      println(r_str)
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.myNumberAdd = 0;
global.IamtheChosen1 = 0;
randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(bottomX != window_get_width())
{
    bottomX = window_get_width()
    bottomY = window_get_height()
    phoneX = bottomX-global.phoneWidth // recheck screen size
    phoneY = 0
    phoneScreenX = phoneX+33;
    phoneScreenY = phoneY+96;
}

draw_set_color(c_black)
draw_set_alpha(.5)
draw_rectangle(phoneX,phoneY,bottomX,bottomY,0)
draw_set_alpha(1)

draw_sprite(spritePhone,0,phoneX,phoneY)
draw_set_color(c_white)


if(batteryPercent &gt; 100){event_user(0);}
batteryLevelSubimage = batteryPercent/5;
draw_sprite(batteryIcon,batteryLevelSubimage,phoneX+274,phoneY+95)

if(phoneApp == 0)
{
    phoneHomeScreen();
}

if(phoneApp == 1)
{
    phoneTerminal()
}

/////home button
homeHover = 0;
if(mouse_pos(phoneX+149,phoneY+610,phoneX+149+homeSpriteWidth,phoneY+610+homeSpriteHeight) == 1)
{
    homeHover = 1;
    if(mouse_check_button_pressed(mb_left))
    {
        phoneApp = 0;
    }
}
draw_sprite(spriteHome,homeHover,phoneX+149,phoneY+610)

if(global.wasted == true)
{
    draw_sprite(wastedImage,-1, (bottomX-global.phoneWidth)/2 ,(bottomY/2)-50 )
    draw_sprite_stretched(crackPHoneScreen,-1,phoneScreenX,phoneScreenY,phoneScreenWidth,phoneScreenHeight)
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>connectedTo = findBluetoothByMAC(string_upper("F3:00:A4:D2:AF:E9"))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
