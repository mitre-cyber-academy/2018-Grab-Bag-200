<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maskCar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>thingsICanHit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x+=16
y+=16
image_speed = 0;

myPath = choose(carPath1,carPath2,carPath3)
myNormalSpeed = 2.5+random(2.5)
if(myPath == carPath3){myNormalSpeed = 16}
path_start(myPath,3,1,1)
notAngry = true;
playerDistance = 0;
myHonkSound = choose(soundHornHonk1,soundHornHonk2,soundHornHonk3)
myLastHonk = current_time;
pissedOff = 0;
imBusy = false;
/*
if(position_meeting(x,y,carObject))
{
    instance_destroy()
}
*/
haveBlueThoothDevice = false; 
if(choose(1,2,3,4,5,6,7,8,9,10) == 5)
{
    haveBlueThoothDevice = true; 
    myBTD = instance_create(x,y,bluethoothDevice)
    myBTD.name = choose("JKST"+string(round(random(1000))),"Car Music Bluetooth","Audio Device")
    myBTD.idd = generateMAC(myBTD.name);
}

typeOfHittable = 1; // a car
howMuchGasDoIHave = round(random(54))
pumpsIDontLike = ds_list_create();





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(haveBlueThoothDevice == true)
{
    with(myBTD)
    {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stopping = 0;
peopleInFrontOfMe = 0;
    for(i = 0; i &lt; instance_number(thingsICanHit); i+=1)
    {
         idd = instance_find(thingsICanHit,i)
         if(instance_exists(idd) &amp;&amp; idd != id)
         {
              playerDirection = point_direction(x,y,idd.x,idd.y)
              angleDifference = abs(image_angle-playerDirection)  // use -(idd.typeOfHittable*40)
              visibility = 20;
              if(idd.typeOfHittable == 1){visibility = 20} // car
              if(angleDifference  &lt; visibility || angleDifference  &gt; 360-visibility ) // player is in field of view
              {
                    playerDistance = point_distance(x,y,idd.x,idd.y);
                    stoppingDistance = 200
                    if(idd.typeOfHittable == 0){stoppingDistance = 200;} // player
                     if(idd.typeOfHittable == 1){stoppingDistance = 150+(path_speed*15);} // car
                     
                    if(playerDistance &lt; stoppingDistance) // stoppingDistance = 200
                    {
                        planOnStopping = true;
                        if(notAngry == false &amp;&amp; idd.typeOfHittable == 0){planOnStopping = false;}
                        if(planOnStopping == true) 
                        {
                            if(path_speed &gt; 8){path_speed-=1}
                            if(path_speed &gt; 4){path_speed-=.5}
                            if(path_speed &gt; 0){path_speed-=.25}
                            if(path_speed &lt; 0){path_speed = 0;}
                            stopping = 1;
                        }
                        if(idd.typeOfHittable == 0 &amp;&amp; peopleInFrontOfMe = 0) // player or people not car
                        {
                            peopleInFrontOfMe+=1
                            pissedOff+=1;//notAngry
                            if(pissedOff &gt; 200){notAngry = false;}
                            if(pissedOff &gt; 100)
                            {
                                if(!audio_is_playing(soundMove)){audio_play_sound(soundMove,-1,-1)}
                            }
                            if(current_time-myLastHonk &gt; 4000)
                            {
                                audio_play_sound(myHonkSound,-1,-1)
                                myLastHonk = current_time;
                            }
                            
                        }
                    }
                    
              }
         
         }
    }

if(howMuchGasDoIHave &lt; 100)
{
    inst = instance_place(x,y+20+random(100),gasPump);
    if (inst != noone)
    {
        if( ds_list_find_index(pumpsIDontLike,inst) = -1 )
        {
           ds_list_add(pumpsIDontLike,inst)
           if(ds_list_size(pumpsIDontLike) &gt; choose(2,3,4) )
           {
                imBusy = true;
           }
           if(path_speed &lt; 2)
           {
                imBusy = true;
           }
        }
    }
}else{imBusy = false;}

if(imBusy == true)
{
    if(path_speed &gt; 8){path_speed-=1}
    if(path_speed &gt; 4){path_speed-=.5}
    if(path_speed &gt; 0){path_speed-=.25}
    if(path_speed &lt; 0){path_speed = 0;}
    stopping = 1;
    howMuchGasDoIHave+=.15
}





if(stopping == 0)
{
    if(pissedOff &gt; 150){if(path_speed&lt; 9 ){path_speed+=.5}}
    if(pissedOff &lt;= 150 &amp;&amp; pissedOff &gt; 50){if(path_speed&lt; 7 ){path_speed+=.25}}
    if(pissedOff &lt;= 50){if(path_speed &lt; myNormalSpeed ){path_speed+=.25}}
    
   
}

 image_angle = direction;
 image_index = image_angle/90

depth=-(x+y)  


 if(haveBlueThoothDevice == true)
 {
    myBTD.x = x;
    myBTD.y = y;
 }

 
 

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="carObject">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.path_speed &gt; path_speed){path_speed = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var isox,isoy;
isox=get_iso_x(x,y)
isoy=get_iso_y(x,y)



draw_sprite(spriteCar,image_index,isox,isoy)
if(imBusy = true)
{
    draw_healthbar(isox-30,(isoy-6)-40,isox+30,(isoy+6)-40,howMuchGasDoIHave,c_gray,c_red,c_lime,0,1,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
